/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/dialog": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Start a scene or choose a dialog option */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StartSceneRequest"] | components["schemas"]["ChooseOptionRequest"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SceneResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/player/state": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get player state */
        get: {
            parameters: {
                query: {
                    /** @description Player ID */
                    playerId: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            history: {
                                monologue: string;
                                choiceId?: string;
                            }[];
                        };
                    };
                };
                /** @description Player not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        StartSceneRequest: {
            /** @example player_abc123 */
            playerId: string;
            /** @description Optional scene to start */
            sceneId?: string;
        };
        ChooseOptionRequest: {
            playerId: string;
            optionId: string;
        };
        SceneResponse: {
            monologue?: string;
            thoughtCabinet?: components["schemas"]["Thought"][];
            dialog?: components["schemas"]["DialogOption"][];
            /** @description Optional skill check result (type may vary) */
            skillCheckResult?: unknown;
        };
        Thought: {
            part?: string;
            text?: string;
        };
        DialogOption: {
            id?: string;
            text?: string;
            skillCheck?: {
                part: string;
                dc: number;
            } | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
